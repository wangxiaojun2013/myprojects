<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" 
    "http://ibatis.apache.org/dtd/sql-map-2.dtd">


<!-- 不使用namespace是由于sql搜索定位会比较方便 -->
<sqlMap>

    <resultMap id="RM.GoodsSetType" class="com.company.project.model.GoodsSetType">
        <result property="goodsTypeId" column="goods_type_id"/>
        <result property="fatherGoodsTypeId" column="father_goods_type_id"/>
        <result property="level" column="level"/>
        <result property="goodsTypeName" column="goods_type_name"/>
        <result property="goodsTypeUrl" column="goods_type_url"/>
        <result property="goodsTypeRemark" column="goods_type_remark"/>
        <result property="sortSequence" column="sort_sequence"/>
        <result property="endTypeFlag" column="end_type_flag"/>
        <result property="frontDeleteFlag" column="front_delete_flag"/>
        <result property="behindDisableFlag" column="behind_disable_flag"/>
        <result property="homeFlag" column="home_flag"/>
        <result property="serverFlow" column="server_flow"/>
        <result property="minExtraFlow" column="min_extra_flow"/>
        <result property="maxExtraFlow" column="max_extra_flow"/>
        <result property="ensure" column="ensure"/>
    </resultMap>

	<!-- 用于select查询公用抽取的列 -->
	<sql id="GoodsSetType.columns">
	    <![CDATA[
        goods_type_id ,father_goods_type_id ,level ,goods_type_name ,goods_type_url ,goods_type_remark ,sort_sequence ,end_type_flag ,front_delete_flag ,behind_disable_flag ,home_flag ,server_flow ,min_extra_flow ,max_extra_flow ,ensure 
	    ]]>
	</sql>
	
    <insert id="GoodsSetType.insert" >
    <![CDATA[
        INSERT INTO goods_set_type (
        	goods_type_id ,
        	father_goods_type_id ,
        	level ,
        	goods_type_name ,
        	goods_type_url ,
        	goods_type_remark ,
        	sort_sequence ,
        	end_type_flag ,
        	front_delete_flag ,
        	behind_disable_flag ,
        	home_flag ,
        	server_flow ,
        	min_extra_flow ,
        	max_extra_flow ,
        	ensure 
        ) VALUES (
        	#goodsTypeId# ,
        	#fatherGoodsTypeId# ,
        	#level# ,
        	#goodsTypeName# ,
        	#goodsTypeUrl# ,
        	#goodsTypeRemark# ,
        	#sortSequence# ,
        	#endTypeFlag# ,
        	#frontDeleteFlag# ,
        	#behindDisableFlag# ,
        	#homeFlag# ,
        	#serverFlow# ,
        	#minExtraFlow# ,
        	#maxExtraFlow# ,
        	#ensure# 
        )
    ]]>
    <!--
    mysql:		type="post" SELECT  select last_insert_id()
    sqlserver:	type="post" SELECT  @@identity  AS  ID
    oracle:		type="pre" 	SELECT  sequenceName.nextval AS ID FROM DUAL
    DB2:		type="pre"	values nextval for sequenceName
    -->
        <selectKey resultClass="java.lang.Long" type="post" keyProperty="goodsTypeId" >
            select last_insert_id()
        </selectKey>
    </insert>

    <update id="GoodsSetType.update" >
    <![CDATA[
        UPDATE goods_set_type SET
	        father_goods_type_id = #fatherGoodsTypeId# ,
	        level = #level# ,
	        goods_type_name = #goodsTypeName# ,
	        goods_type_url = #goodsTypeUrl# ,
	        goods_type_remark = #goodsTypeRemark# ,
	        sort_sequence = #sortSequence# ,
	        end_type_flag = #endTypeFlag# ,
	        front_delete_flag = #frontDeleteFlag# ,
	        behind_disable_flag = #behindDisableFlag# ,
	        home_flag = #homeFlag# ,
	        server_flow = #serverFlow# ,
	        min_extra_flow = #minExtraFlow# ,
	        max_extra_flow = #maxExtraFlow# ,
	        ensure = #ensure# 
        WHERE 
	        goods_type_id = #goodsTypeId# 
    ]]>
    </update>

    <delete id="GoodsSetType.delete">
    <![CDATA[
        DELETE FROM goods_set_type WHERE
        goods_type_id = #goodsTypeId# 
    ]]>
    </delete>
    
    <select id="GoodsSetType.getById" resultMap="RM.GoodsSetType">
	    SELECT <include refid="GoodsSetType.columns"/>
	    <![CDATA[
	        FROM goods_set_type 
	        WHERE 
		        goods_type_id = #goodsTypeId# 
	    ]]>
    </select>

	<sql id="GoodsSetType.findPage.where">
	    <dynamic prepend="WHERE">
		       <isNotEmpty prepend="AND" property="goodsTypeId">
		             goods_type_id = #goodsTypeId#
		       </isNotEmpty>
		       <isNotEmpty prepend="AND" property="fatherGoodsTypeId">
		             father_goods_type_id = #fatherGoodsTypeId#
		       </isNotEmpty>
		       <isNotEmpty prepend="AND" property="level">
		             level = #level#
		       </isNotEmpty>
		       <isNotEmpty prepend="AND" property="goodsTypeName">
		             goods_type_name = #goodsTypeName#
		       </isNotEmpty>
		       <isNotEmpty prepend="AND" property="goodsTypeUrl">
		             goods_type_url = #goodsTypeUrl#
		       </isNotEmpty>
		       <isNotEmpty prepend="AND" property="goodsTypeRemark">
		             goods_type_remark = #goodsTypeRemark#
		       </isNotEmpty>
		       <isNotEmpty prepend="AND" property="sortSequence">
		             sort_sequence = #sortSequence#
		       </isNotEmpty>
		       <isNotEmpty prepend="AND" property="endTypeFlag">
		             end_type_flag = #endTypeFlag#
		       </isNotEmpty>
		       <isNotEmpty prepend="AND" property="frontDeleteFlag">
		             front_delete_flag = #frontDeleteFlag#
		       </isNotEmpty>
		       <isNotEmpty prepend="AND" property="behindDisableFlag">
		             behind_disable_flag = #behindDisableFlag#
		       </isNotEmpty>
		       <isNotEmpty prepend="AND" property="homeFlag">
		             home_flag = #homeFlag#
		       </isNotEmpty>
		       <isNotEmpty prepend="AND" property="serverFlow">
		             server_flow = #serverFlow#
		       </isNotEmpty>
		       <isNotEmpty prepend="AND" property="minExtraFlow">
		             min_extra_flow = #minExtraFlow#
		       </isNotEmpty>
		       <isNotEmpty prepend="AND" property="maxExtraFlow">
		             max_extra_flow = #maxExtraFlow#
		       </isNotEmpty>
		       <isNotEmpty prepend="AND" property="ensure">
		             ensure = #ensure#
		       </isNotEmpty>
	    </dynamic>	
	</sql>
	 
    <select id="GoodsSetType.findPage.count" resultClass="long">
        SELECT count(*) FROM goods_set_type <include refid="GoodsSetType.findPage.where"/>    
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 #offset#,#pageSize#,#lastRows# 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="GoodsSetType.findPage" resultMap="RM.GoodsSetType">
    	SELECT <include refid="GoodsSetType.columns"/> FROM goods_set_type 
		<include refid="GoodsSetType.findPage.where"/>
		<dynamic prepend="ORDER BY">
			<isNotEmpty property="sortColumns">$sortColumns$</isNotEmpty>
		</dynamic>
    </select>

	
</sqlMap>

